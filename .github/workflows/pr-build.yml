name: PR Build

on:
  pull_request:
    branches: [master]

  workflow_dispatch:

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13"
      - name: Install Pipenv
        run: python -m pip install --upgrade pipenv
      - name: Checkout Repository
        uses: actions/checkout@v5
      - name: Cache Pipenv
        id: cache-pipenv
        uses: actions/cache@v4
        with:
          path: ~/.local/share/virtualenvs
          key: pipenv-${{ hashFiles('Pipfile.lock') }}
      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install --deploy --dev
      - name: Set up locale
        run: |
          sudo locale-gen de_DE.UTF-8
          sudo dpkg-reconfigure locales

      - name: Run unit tests with coverage
        run: pipenv run hbcoverage
        env:
          TEST_OUTPUT_FILE_NAME: unit.xml
      - name: Generate coverage report
        run: pipenv run coverage xml
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage report
          path: coverage.xml
      - name: Unit Test Report
        uses: dorny/test-reporter@v2
        if: ${{ !cancelled() }}
        with:
          name: Unit Tests
          path: unit.xml
          reporter: java-junit

      - name: Check format
        run: pipenv run black src --check
      - name: Check import order
        run: pipenv run isort src --check
      - name: Run Mypy
        run: pipenv run mypy src
      - name: Run Flake8
        run: pipenv run flake8
      - name: Run Pylint
        run: pipenv run pylint src
      - name: Run djLint html
        run: pipenv run djlint src --profile=html
      - name: Run djLint django
        run: pipenv run djlint src --profile=django
      - name: Run djLint jinja
        run: pipenv run djlint src --profile=jinja
