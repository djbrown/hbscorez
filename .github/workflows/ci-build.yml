name: CI Build

on:
  push:
    branches: [master]

  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: "3.7"
      - name: Install Pipenv
        run: python -m pip install --upgrade pipenv
      - name: Cache Pipenv
        id: cache-pipenv
        uses: actions/cache@v2.1.6
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}
      - name: Checkout Repository
        uses: actions/checkout@v2.3.5
      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install --deploy --dev
      - name: Download FOSSA CLI
        run: "curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | sudo bash"

  unittest:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Run unit tests with coverage
        run: pipenv run hbcoverage
      - name: Generate coverage.xml
        run: pipenv run coverage xml

  codacy:
    runs-on: ubuntu-latest
    needs: unittest
    steps:
      - uses: codacy/codacy-coverage-reporter-action@v1.1.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml

  codeclimate:
    runs-on: ubuntu-latest
    needs: unittest
    steps:
      - uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

  codecov:
    runs-on: ubuntu-latest
    needs: unittest
    steps:
      - uses: codecov/codecov-action@v2.1.0

  coveralls:
    runs-on: ubuntu-latest
    needs: unittest
    steps:
      - uses: coverallsapp/github-action@1.1.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  typing:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Run Mypy
        run: pipenv run mypy src

  styleguide:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Run Flake8
        run: pipenv run flake8

  attributions:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Compare attributions file with actual dependencies
        run: diff ATTRIBUTIONS.csv <(pipenv run attributions)

  licenses:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Generate dependencies file
        run: pipenv lock -r > requirements.txt
      - name: "Run FOSSA Scan"
        uses: fossas/fossa-action@1.1.0
        with:
          api-key: ${{secrets.FOSSA_API_KEY}}
      - name: "Run FOSSA Test"
        uses: fossas/fossa-action@1.1.0
        with:
          api-key: ${{secrets.FOSSA_API_KEY}}
          run-tests: true
