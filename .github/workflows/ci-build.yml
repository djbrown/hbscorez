name: CI Build

on:
  push:
    branches: [master]

  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Install pipenv
        run: python -m pip install --upgrade pipenv
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install --deploy --dev
      - name: Install fossa cli
        run: "curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | sudo bash"

  unittest:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - run: pipenv run hbcoverage
      - run: pipenv run coverage xml
      - name: Codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml
      - name: Codecov
        uses: codecov/codecov-action@v2
      - name: Code Climate
        uses: paambaati/codeclimate-action@v2
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  licensecheck:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - run: pipenv lock -r > requirements.txt
      - name: "Run FOSSA Scan"
        uses: fossas/fossa-action@1
        with:
          api-key: ${{secrets.FOSSA_API_KEY}}
      - name: "Run FOSSA Test"
        uses: fossas/fossa-action@1
        with:
          api-key: ${{secrets.FOSSA_API_KEY}}
          run-tests: true

  typecheck:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - run: pipenv run mypy src

  styleguide:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - run: pipenv run flake8

  attributions:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - run: diff ATTRIBUTIONS.csv <(pipenv run attributions)
